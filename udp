CLIENT:

#include<stdio.h>
#include<string.h>
#include<sys/socket.h>
#include<stdlib.h>
#include<netdb.h>

int main(int argc,char* argv[])
{
	struct sockaddr_in client;
	if(argc !=3)
		printf("Input format not connect");
	int sockfd = socket(AF_INET,SOCK_DGRAM,0);
	if(sockfd == -1)
		printf("Error in socket creation");
	client.sin_family = AF_INET;
	client.sin_addr.s_addr = INADDR_ANY;
	client.sin_port = htons(atoi(argv[2]));
	char buffer[100];
	printf("Enter a msg to be read to server:");
	fgets(buffer,100,stdin);
	if (sendto(sockfd,buffer,sizeof(buffer),0,(struct sockaddr*) &client,sizeof(client))<0)
		printf("Error in sending");
	return 0;  
} 

SERVER:

#include<stdio.h>
#include<string.h>
#include<sys/socket.h>
#include<stdlib.h>
#include<netdb.h>
int main(int argc,char* argv[])
{
	struct sockaddr_in server;
	if(argc !=2)
		printf("Input format not connect");
	int sockfd = socket(AF_INET,SOCK_DGRAM,0);
	if(sockfd == -1)
		printf("Error in socket creation");
	server.sin_family = AF_INET;
	server.sin_addr.s_addr = INADDR_ANY;
	server.sin_port = htons(atoi(argv[1]));
	if(bind(sockfd,(struct  sockaddr*)&server,sizeof(server))<0)
		printf("Error in binding");
	char buffer[100];
	printf("server waiting\n");
	
	if (recvfrom(sockfd,buffer,100,0,(struct  sockaddr*) &server,sizeof(server))<0)
		printf("Error in receiving\n");
	printf("Got a datagram:%s",buffer);
	return 0;  
}
